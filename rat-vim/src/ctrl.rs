pub(crate) fn ctrl(c: char) -> char {
    match c {
        'a' | 'A' => CTRL_A,
        'b' | 'B' => CTRL_B,
        'c' | 'C' => CTRL_C,
        'd' | 'D' => CTRL_D,
        'e' | 'E' => CTRL_E,
        'f' | 'F' => CTRL_F,
        'g' | 'G' => CTRL_G,
        'h' | 'H' => CTRL_H,
        'i' | 'I' => CTRL_I,
        'j' | 'J' => CTRL_J,
        'k' | 'K' => CTRL_K,
        'l' | 'L' => CTRL_L,
        'm' | 'M' => CTRL_M,
        'n' | 'N' => CTRL_N,
        'o' | 'O' => CTRL_O,
        'p' | 'P' => CTRL_P,
        'q' | 'Q' => CTRL_Q,
        'r' | 'R' => CTRL_R,
        's' | 'S' => CTRL_S,
        't' | 'T' => CTRL_T,
        'u' | 'U' => CTRL_U,
        'v' | 'V' => CTRL_V,
        'w' | 'W' => CTRL_W,
        'x' | 'X' => CTRL_X,
        'y' | 'Y' => CTRL_Y,
        'z' | 'Z' => CTRL_Z,
        _ => unimplemented!(),
    }
}

pub(crate) const CTRL_A: char = '\x01';
pub(crate) const CTRL_B: char = '\x02';
pub(crate) const CTRL_C: char = '\x03';
pub(crate) const CTRL_D: char = '\x04';
pub(crate) const CTRL_E: char = '\x05';
pub(crate) const CTRL_F: char = '\x06';
pub(crate) const CTRL_G: char = '\x07';
pub(crate) const CTRL_H: char = '\x08';
pub(crate) const BS: char = '\x08';
pub(crate) const CTRL_I: char = '\x09';
pub(crate) const CTRL_J: char = '\x0A';
pub(crate) const CTRL_K: char = '\x0B';
pub(crate) const CTRL_L: char = '\x0C';
pub(crate) const CTRL_M: char = '\x0D';
pub(crate) const CTRL_N: char = '\x0E';
pub(crate) const CTRL_O: char = '\x0F';
pub(crate) const CTRL_P: char = '\x10';
pub(crate) const CTRL_Q: char = '\x11';
pub(crate) const CTRL_R: char = '\x12';
pub(crate) const CTRL_S: char = '\x13';
pub(crate) const CTRL_T: char = '\x14';
pub(crate) const CTRL_U: char = '\x15';
pub(crate) const CTRL_V: char = '\x16';
pub(crate) const CTRL_W: char = '\x17';
pub(crate) const CTRL_X: char = '\x18';
pub(crate) const CTRL_Y: char = '\x19';
pub(crate) const CTRL_Z: char = '\x1A';
pub(crate) const DEL: char = '\x7F';
